(define "Swap"
	(do 
		(add (piece (who at:(last From)))
			(to
				(last To)
				(apply
					(do
						(set Var "StateToBeAtLastFrom" (state at:(to)))
						next:(remove (to))
					)
				)
			)
		)
		next:(add (piece 3 state:(var "StateToBeAtLastFrom"))
			(to
				(last From)
				(apply
					(remove (to))
				)
			)
		)
	)
)

(define "BalanceProtocol"
	(phase "Swapping"
		(play
			(or
				(move Pass
					(then (set Var "Passed" 1))
				)
				(move Select
					(from 
						(sites Board)
						if:(and
							(!= 3 (who at:(from)))
							(not 
								(is In (from) (values Remembered))
							)
						)
					)
					(to
						(sites Board)
						if:(= 3 (who at:(to)))
					)
					(then
						(and {
							(remember Value (last To))
							("Swap")
							(if
								(!= 3 (size Array (values Remembered)))
								(moveAgain)
							)
						})
					)
				)
			)
		)
		(nextPhase
			(or
				(= 1 (var "Passed"))
				(= 4 (size Array (values Remembered)))
			)
			"Choose"
		)
	)
	(phase "Choose"
		(play
			(or
				(move Swap Players P1 P2
					(then (set NextPlayer (player 1)))
				)
				(move Pass)
			)
		)
		(nextPhase "Play")
	)
)

(game "Paintscape"
	(players 2)
	(equipment {
		(board (square 8))
		(piece "Disc" Each)
		(piece "Square" Shared maxState:5)
	})
	(rules
		(start {
			(place Random (sites Empty) {"Disc1" "Disc2"} count:2)
			(place Random (sites Empty) {"Square"} count:12 state:1)
			(place Random (sites Empty) {"Square"} count:12 state:2)
			(place Random (sites Empty) {"Square"} count:12 state:3)
			(place Random (sites Empty) {"Square"} count:12 state:4)
			(place Random (sites Empty) {"Square"} count:12 state:5)
		})
		phases:{
		<Balance>
		(phase "Play"
			(play
				(move Add
					(to 
						(sites Around 
							(sites Occupied by:Mover)
							Orthogonal
						)
						if:(not
							(or
								(= (mover) (who at:(to)))
								(= (next) (who at:(to)))
							)
						)
					)
					stack:True
					(then
						(if 
							(and
								(= 3 (who at:(last To) level:0))
								(= 6
									(count Sites
										in:(forEach
											(sites Occupied by:Mover)
											if:(= 
												(state at:(last To) level:0)
												(state at:(site) level:0)
											)
										)
									)
								)
							)
							(and
								(remove
									(forEach
										(sites Board)
										if:(= 
											(state at:(last To) level:0)
											(state at:(site) level:0)
										)
									)
									count:2
								)
								(addScore Mover 1)
							)
						)
					)
				)
			)
		)
		}
		(end
			(if
				(or
					(= 3 (score P1))
					(= 3 (score P2))
				)
				(byScore)
			)
		)
	)
)

(option "Balance Phase" <Balance> args:{ <balance> }
	{
	(item "On" <("BalanceProtocol")> "The balance protocol is currently in force.")*
	(item "Off" <> "The balance protocol is currently not in force.")
	}
)

(metadata
    (info
        {
        (description "Paintscape is a colorful territory game played on a Chess board with colored tiles and black and white stones. It was invented by Michael Amundsen fall 2022.")
        (rules 
"Paintscape is a game for two players – Black and White – played on the squares (cells/faces) of a square grid with 8 squares per side (e.g. a Chess board). 
You also need a large supply of black and white stones and 5 distinguishable (e.g. by color) shared sets of 12 tiles. That is, each of the 5 sets contain 12 tiles, for 60 tiles in total.

Setup:
Before play begins, all 60 tiles and 2 white and 2 black stones are distributed randomly on the 64 squares of the board.
A short balancing phase then ensues:

One player swaps the position of any number of stones with a tile. That is, for 0, 1, 2, 3, or 4 of the stones, swap its position with any tile.
When all stones have been swapped, or the swapping player passes, indicating that they do not wish to swap any more stones, the other player choses to play first as Black or second as White in the proper playing phase.

The balancing phase can be skipped by new players, or you can agree on a fixed setup for the 4 initial stones.

Play:
In this phase (the proper playing phase), players take turns, starting with Black, placing stones of their own color.
On your turn, place a stone of your color on a square adjacent to one of your stones already on the board.
You may not place a stone on a square occupied by a stone. I.e. the square you place at must be empty or only occupied by a tile.
Stones placed on tiles normally just stack on top of them, however:
If a placement makes you have a stone on half of the tiles of a certain color, remove all tiles of that color along with the stones stacked on top of them (regardless of whether they're friendly or enemy).

The goal:
You win if you remove 3 of the 5 colors.")
        (version "1.3.6")
        (classification "board/space/territory")
        (author "Michael Amundsen")
        (credit "Michael Amundsen")
        (date "2022")
        }
    )
	(graphics {
		(player Colour P1 (colour Dark))
		(player Colour P2 (colour White))
		(piece Colour P1
			fillColour:(colour Dark)
			strokeColour:(colour Dark)
		)
		(piece Colour P2
			fillColour:(colour White)
			strokeColour:(colour Dark)
		)
		(piece Scale P1 .67)
		(piece Scale P2 .67)
		(piece Colour  Shared state:1
			fillColour:(colour Yellow)
			strokeColour:(colour White)
		)        
		(piece Colour Shared state:2
			fillColour:(colour Red)
			strokeColour:(colour White)
		)
		(piece Colour Shared state:3
			fillColour:(colour Cyan)
			strokeColour:(colour White)
		)
		(piece Colour Shared state:4
			fillColour:(colour Pink)
			strokeColour:(colour White)
		)
		(piece Colour Shared state:5
			fillColour:(colour DarkBrown)
			strokeColour:(colour White)
		)
		(region Colour (sites Board) (colour 250 210 148))
		(board Colour InnerEdges (colour 178 151 100))
		(board Colour OuterEdges (colour 178 151 100))
		(stackType Default 0.0)
	})
)